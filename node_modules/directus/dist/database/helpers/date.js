"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDateHelper = void 0;
const __1 = __importDefault(require(".."));
let dateHelper;
function getDateHelper() {
    if (!dateHelper) {
        const db = (0, __1.default)();
        const client = db.client.config.client;
        const constructor = {
            mysql: KnexDate,
            mariadb: KnexDate,
            sqlite3: KnexDate_SQLITE,
            pg: KnexDate,
            postgres: KnexDate,
            redshift: KnexDate,
            mssql: KnexDate,
            oracledb: KnexDate,
        }[client];
        if (!constructor) {
            throw new Error(`Geometry helper not implemented on ${client}.`);
        }
        dateHelper = new constructor(db);
    }
    return dateHelper;
}
exports.getDateHelper = getDateHelper;
class KnexDate {
    constructor(knex) {
        this.knex = knex;
    }
    parseDate(date) {
        return date;
    }
}
class KnexDate_SQLITE extends KnexDate {
    parseDate(date) {
        const newDate = new Date(date);
        return (newDate.getTime() - newDate.getTimezoneOffset() * 60 * 1000).toString();
    }
}
